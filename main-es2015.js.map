{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/Shared/mb-map/mb-map.component.html","webpack:///./src/app/Shared/mb-table/mb-table.component.html","webpack:///./src/app/app.component.html","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/Shared/errorHandle.ts","webpack:///./src/app/Shared/mb-map/marker.ts","webpack:///./src/app/Shared/mb-map/mb-map.component.css","webpack:///./src/app/Shared/mb-map/mb-map.component.ts","webpack:///./src/app/Shared/mb-table/mb-table.component.css","webpack:///./src/app/Shared/mb-table/mb-table.component.ts","webpack:///./src/app/Shared/shared.module.ts","webpack:///./src/app/Shared/url-validator.directive.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/components.module.ts","webpack:///./src/app/components/home/home.component.css","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/models/category.ts","webpack:///./src/app/services/kijiji.service.ts","webpack:///./src/app/services/mb-map.service.ts","webpack:///./src/app/services/rented-houses.service.ts","webpack:///./src/app/services/services.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<agm-map\\r\\n    (mapClick)=\\\"clickedMap($event)\\\"\\r\\n    [latitude]=\\\"lat\\\"\\r\\n    [longitude]=\\\"lng\\\"\\r\\n    [zoom]=\\\"zoom\\\"\\r\\n    mapTypeId=\\\"terrain\\\"\\r\\n    [disableDefaultUI]=\\\"false\\\"\\r\\n    [zoomControl]=\\\"false\\\"\\r\\n>\\r\\n    <agm-marker\\r\\n        *ngFor=\\\"let m of changedMarkers; let i = index\\\"\\r\\n        [latitude]=\\\"m.lat\\\"\\r\\n        [longitude]=\\\"m.lng\\\"\\r\\n        [title]=\\\"m.date\\\"\\r\\n        [label]=\\\"{\\r\\n            color: 'black',\\r\\n            fontSize: '14px',\\r\\n            fontWeight: 'bold',\\r\\n            text: m.price\\r\\n        }\\\"\\r\\n        [markerDraggable]=\\\"m.draggable\\\"\\r\\n        (markerClick)=\\\"clickedMarker(m.label, infoWindow, i)\\\"\\r\\n    >\\r\\n        <agm-info-window #infoWindow maxWidth=\\\"480\\\">\\r\\n            <mat-card class=\\\"example-card\\\">\\r\\n                <mat-card-header>\\r\\n                    <div mat-card-avatar class=\\\"example-header-image\\\"></div>\\r\\n                    <mat-card-title>{{ m.title }}</mat-card-title>\\r\\n                    <mat-card-subtitle>\\r\\n                        <strong>Price: {{ m.price }}</strong>\\r\\n                    </mat-card-subtitle>\\r\\n                    <mat-card-subtitle>\\r\\n                        Address: {{ m.address }}\\r\\n                    </mat-card-subtitle>\\r\\n                    <mat-card-subtitle *ngIf=\\\"m.date\\\">\\r\\n                        <strong>Date: {{ m.date }}</strong>\\r\\n                    </mat-card-subtitle>\\r\\n                </mat-card-header>\\r\\n                <mat-accordion>\\r\\n                    <!-- <mat-expansion-panel\\r\\n                        *ngFor=\\\"let url of m.imagesUrl; let i = index\\\"\\r\\n                    >\\r\\n                        <mat-expansion-panel-header>\\r\\n                            <mat-panel-title>\\r\\n                                Image {{ i + 1 }}\\r\\n                            </mat-panel-title>\\r\\n                        </mat-expansion-panel-header>\\r\\n\\r\\n                        <img\\r\\n                            mat-card-image\\r\\n                            [src]=\\\"url\\\"\\r\\n                            alt=\\\"Photo of a Shiba Inu\\\"\\r\\n                        />\\r\\n                    </mat-expansion-panel> -->\\r\\n                </mat-accordion>\\r\\n                <mat-card-content>\\r\\n                    <p>Description: {{ m.des }}</p>\\r\\n                </mat-card-content>\\r\\n                <mat-card-actions>\\r\\n                    Url of ad:\\r\\n                    <a mat-button target=\\\"_blank\\\" [href]=\\\"m.url\\\"> Kijiji Url</a>\\r\\n                    <!-- <button  >SHARE</button> -->\\r\\n                </mat-card-actions>\\r\\n            </mat-card>\\r\\n        </agm-info-window>\\r\\n    </agm-marker>\\r\\n\\r\\n    <!-- <agm-circle [latitude]=\\\"lat + 0.3\\\" [longitude]=\\\"lng\\\"\\r\\n      [radius]=\\\"5000\\\"\\r\\n      [fillColor]=\\\"'red'\\\"\\r\\n      [circleDraggable]=\\\"true\\\"\\r\\n      [editable]=\\\"true\\\">\\r\\n  </agm-circle> -->\\r\\n</agm-map>\\r\\n\\r\\n<ng5-slider\\r\\n    [(value)]=\\\"minMaxValue[0]\\\"\\r\\n    [(highValue)]=\\\"minMaxValue[1]\\\"\\r\\n    [options]=\\\"options\\\"\\r\\n    (userChangeEnd)=\\\"onSliderChanged()\\\"\\r\\n></ng5-slider>\\r\\n<button mat-raised-button color=\\\"primary\\\" (click)=\\\"restMarker()\\\">\\r\\n    Reset Markers\\r\\n</button>\\r\\n\"","module.exports = \"<p>\\r\\n  mb-table works!\\r\\n</p>\\r\\n\"","module.exports = \"<header>\\r\\n    <div class=\\\"navbar navbar-dark bg-dark box-shadow\\\">\\r\\n        <div class=\\\"container d-flex justify-content-between\\\">\\r\\n            <a href=\\\"#\\\" class=\\\"navbar-brand d-flex align-items-center\\\">\\r\\n                <i\\r\\n                    style=\\\"margin-right: 0.3em\\\"\\r\\n                    class=\\\"fas fa-map-marked-alt\\\"\\r\\n                ></i>\\r\\n                <strong>Kijiji scraper</strong>\\r\\n            </a>\\r\\n        </div>\\r\\n    </div>\\r\\n</header>\\r\\n<mat-drawer-container class=\\\"example-container\\\" autosize>\\r\\n    <mat-drawer #drawer class=\\\"col-md-2 example-sidenav\\\" opened mode=\\\"side\\\">\\r\\n        <div class=\\\"filterInputs\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n                <input\\r\\n                    min=\\\"1\\\"\\r\\n                    (change)=\\\"createUrl()\\\"\\r\\n                    type=\\\"number\\\"\\r\\n                    matInput\\r\\n                    placeholder=\\\"Page number\\\"\\r\\n                    #urlBox=\\\"ngModel\\\"\\r\\n                    [(ngModel)]=\\\"startPage\\\"\\r\\n                    required\\r\\n                    name=\\\"startbox\\\"\\r\\n                    aria-describedby=\\\"basic-addon3\\\"\\r\\n                />\\r\\n            </mat-form-field>\\r\\n\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n                <mat-label>City Name</mat-label>\\r\\n                <mat-select\\r\\n                    name=\\\"cityDdl\\\"\\r\\n                    #city\\r\\n                    [(ngModel)]=\\\"selectedCityCode\\\"\\r\\n                    (selectionChange)=\\\"citySelected($event)\\\"\\r\\n                ><mat-option>--</mat-option>\\r\\n                    <mat-option\\r\\n                        *ngFor=\\\"let items of cityNames.names\\\"\\r\\n                        [value]=\\\"items.citycode\\\"\\r\\n                    >\\r\\n                        {{ items.cityName }}</mat-option\\r\\n                    >\\r\\n                </mat-select>\\r\\n            </mat-form-field>\\r\\n\\r\\n            <mat-form-field appearance=\\\"outline\\\" *ngIf=\\\"selectedCityCode\\\">\\r\\n                <mat-label>Categories</mat-label>\\r\\n                <mat-select\\r\\n                    name=\\\"categoryDdl\\\"\\r\\n                    #category\\r\\n                    [(ngModel)]=\\\"selectedcateGoryIdLevel1\\\"\\r\\n                    (selectionChange)=\\\"categoryChanged($event)\\\"\\r\\n                ><mat-option>--</mat-option>\\r\\n                    <mat-option\\r\\n                        *ngFor=\\\"let items of categories?.level1?.items\\\"\\r\\n                        [value]=\\\"items.categoryId\\\"\\r\\n                    >\\r\\n                        {{ items.name }}</mat-option\\r\\n                    >\\r\\n                </mat-select>\\r\\n            </mat-form-field>\\r\\n\\r\\n            <mat-form-field\\r\\n                appearance=\\\"outline\\\"\\r\\n                *ngIf=\\\"selectedcateGoryIdLevel1\\\"\\r\\n            >\\r\\n                <mat-label>Sub Categories</mat-label>\\r\\n                <mat-select\\r\\n                    name=\\\"categorySubDdl\\\"\\r\\n                    [(ngModel)]=\\\"selectedcateGoryIdLevel2\\\"\\r\\n                    (selectionChange)=\\\"categoryChanged($event)\\\"\\r\\n                ><mat-option>--</mat-option>\\r\\n                    <mat-option\\r\\n                        *ngFor=\\\"let items of categories?.level2?.items\\\"\\r\\n                        [value]=\\\"items.categoryId\\\"\\r\\n                    >\\r\\n                        {{ items.name }}</mat-option\\r\\n                    >\\r\\n                </mat-select>\\r\\n            </mat-form-field>\\r\\n\\r\\n            <mat-form-field\\r\\n                appearance=\\\"outline\\\"\\r\\n                *ngIf=\\\"\\r\\n                    categories?.level3?.items.length &&\\r\\n                    !(categories?.level3?.items.length === 0)\\r\\n                \\\"\\r\\n            >\\r\\n                <mat-label>Level 3 Cagtegories</mat-label>\\r\\n                <mat-select\\r\\n                    name=\\\"categorySubDdl\\\"\\r\\n                    [(ngModel)]=\\\"selectedcateGoryIdLevel3\\\"\\r\\n                    (selectionChange)=\\\"categoryChanged($event)\\\"\\r\\n                >\\r\\n                    <mat-option\\r\\n                        *ngFor=\\\"let items of categories?.level3?.items\\\"\\r\\n                        [value]=\\\"items.categoryId\\\"\\r\\n                    >\\r\\n                        {{ items.name }}</mat-option\\r\\n                    >\\r\\n                </mat-select>\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n        <mat-divider></mat-divider>\\r\\n        <div *ngIf=\\\"needPriceFilter\\\">\\r\\n            <mat-form-field class=\\\"price\\\" appearance=\\\"outline\\\">\\r\\n                <input\\r\\n                    matInput\\r\\n                    (change)=\\\"createUrl()\\\"\\r\\n                    type=\\\"text\\\"\\r\\n                    [name]=\\\"minPrice\\\"\\r\\n                    [(ngModel)]=\\\"minPrice\\\"\\r\\n                    data-type=\\\"price\\\"\\r\\n                    data-placeholder=\\\"price from\\\"\\r\\n                    title=\\\"from\\\"\\r\\n                    class=\\\"placeholder-text\\\"\\r\\n                />\\r\\n            </mat-form-field>\\r\\n            -\\r\\n            <mat-form-field class=\\\"price\\\" appearance=\\\"outline\\\">\\r\\n                <input\\r\\n                    (change)=\\\"createUrl()\\\"\\r\\n                    matInput\\r\\n                    type=\\\"text\\\"\\r\\n                    [name]=\\\"maxPrice\\\"\\r\\n                    [(ngModel)]=\\\"maxPrice\\\"\\r\\n                    data-type=\\\"price\\\"\\r\\n                    data-placeholder=\\\"price to\\\"\\r\\n                    title=\\\"to\\\"\\r\\n                    class=\\\"placeholder-text\\\"\\r\\n                />\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n    </mat-drawer>\\r\\n    <div class=\\\"example-sidenav-content\\\">\\r\\n        <app-home [url]=\\\"url\\\"></app-home>\\r\\n        <button type=\\\"button\\\" mat-button (click)=\\\"drawer.toggle()\\\">\\r\\n            Toggle sidenav\\r\\n        </button>\\r\\n    </div>\\r\\n</mat-drawer-container>\\r\\n\"","module.exports = \"\\n<div class=\\\"jumbotron \\\">\\n    <div class=\\\"container\\\">\\n        <form #rentHomes=\\\"ngForm\\\" class=\\\"example-form\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-lg-10\\\">\\n                    <div class=\\\"input-group mb-3\\\">\\n                        <div class=\\\"input-group-prepend\\\">\\n                            <span class=\\\"input-group-text\\\" id=\\\"basic-addon3\\\"\\n                                >URL:</span\\n                            >\\n                        </div>\\n                        <input\\n                        disabled\\n\\n                            type=\\\"text\\\"\\n                            class=\\\"form-control\\\"\\n                            #urlBox=\\\"ngModel\\\"\\n                            [(ngModel)]=\\\"url\\\"\\n                            required\\n                            appUrlValidator\\n                            name=\\\"urlBox\\\"\\n                            aria-describedby=\\\"basic-addon3\\\"\\n                        />\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n\\n                <div class=\\\"col-lg-3\\\">\\n                    <div class=\\\"input-group mb-3\\\">\\n                        <div class=\\\"input-group-prepend\\\">\\n                            <span class=\\\"input-group-text\\\" id=\\\"basic-addon3\\\"\\n                                >Keep Last result:</span\\n                            >\\n                        </div>\\n                        <input\\n                            type=\\\"checkbox\\\"\\n                            class=\\\"form-control\\\"\\n                            #urlBox=\\\"ngModel\\\"\\n                            [(ngModel)]=\\\"isKeep\\\"\\n                            name=\\\"keepLogs\\\"\\n                            aria-describedby=\\\"basic-addon3\\\"\\n                        />\\n                    </div>\\n                </div>\\n                <!-- <a style=\\\"float: right;\\\" href=\\\"#\\\">Save in Memory</a>|\\n              <a  style=\\\"float: right;\\\"href=\\\"#\\\">Remove from Memory</a>|\\n              <a href=\\\"#\\\">Open from Memory</a> -->\\n                <div class=\\\"col-lg-2\\\">\\n                    <button\\n                    [disabled]=\\\"!this.url\\\"\\n                        mat-raised-button\\n                        color=\\\"primary\\\"\\n                        (click)=\\\"getRentedHouses()\\\"\\n                    >\\n                        Run\\n                    </button>\\n                </div>\\n                <div class=\\\"col-lg-2\\\">\\n                    <button\\n                        mat-raised-button\\n                        color=\\\"primary\\\"\\n                        (click)=\\\"DeleteHistoryData()\\\"\\n                    >\\n                        Delete History\\n                    </button>\\n                </div>\\n            </div>\\n            <div\\n                *ngIf=\\\"urlBox.invalid && (urlBox.dirty || urlBox.touched)\\\"\\n                class=\\\"alert alert-danger\\\"\\n            >\\n                <div *ngIf=\\\"urlBox.errors['required']\\\">\\n                    URL is required.\\n                </div>\\n                <div *ngIf=\\\"urlBox.errors['isUrlValid']\\\">\\n                    Please enter the correct url.\\n                </div>\\n            </div>\\n        </form>\\n        <!-- <mat-progress-bar mode=\\\"buffer\\\"></mat-progress-bar> -->\\n    </div>\\n</div>\\n<!-- section 2 -->\\n<div class=\\\"container text-center\\\">\\n    <div class=\\\"col-lg-12\\\" style=\\\"padding-bottom:10px\\\">\\n        <app-mb-map [data]=\\\"scrapedData\\\"></app-mb-map>\\n    </div>\\n    <!-- <button mat-raised-button color=\\\"primary\\\">Download CSV</button> -->\\n</div>\\n\\n<!-- Content here -->\\n\"","import { HttpErrorResponse } from '@angular/common/http';\nimport { throwError } from 'rxjs';\n\nexport class ErrorHandle {\n\n   /**\n     * Handles errors with service requests.\n     * @param error The error from the http response.\n     */\n    public handleError(error: HttpErrorResponse) {\n      console.log(error);\n      if (error.error instanceof ErrorEvent) {\n          // A client-side or network error occurred. Handle it accordingly.\n          console.error('An error occurred:', error.error.message);\n      } else {\n          // The backend returned an unsuccessful response code.\n          // The response body may contain clues as to what went wrong,\n          console.error(\n              `Backend returned code ${error.status}, body was: ${error.error}`\n          );\n      }\n      // return an ErrorObservable with a user-facing error message\n      return throwError('Something bad happened; please try again later.');\n  }\n\n}\n","// just an interface for type safety.\r\nexport class Marker {\r\n    lat: number;\r\n    lng: number;\r\n    label?: string;\r\n    draggable: boolean;\r\n    des?: string;\r\n    url: string;\r\n    title?: string;\r\n    imagesUrl?: string[][];\r\n    price?: string;\r\n    date?: string;\r\n    address?: string;\r\n}\r\n","module.exports = \"mat-card-content {\\r\\nwidth: 400px;\\r\\n  height: 100px;\\r\\n  text-overflow: ellipsis;\\r\\n  /* white-space: nowrap; */\\r\\n  display: block;\\r\\n  overflow: hidden;\\r\\n}\\r\\n\\r\\nagm-map {\\r\\n  height: 450px;\\r\\n  text-shadow: 0px 0px 9.2px white;\\r\\n\\r\\n\\r\\n};\\r\\n\\r\\n.agm-map-container-inner {\\r\\n  width: inherit;\\r\\n  height: inherit;\\r\\n}\\r\\n\\r\\n.agm-map-content {\\r\\n  display:none;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvU2hhcmVkL21iLW1hcC9tYi1tYXAuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBLFlBQVk7RUFDVixhQUFhO0VBQ2IsdUJBQXVCO0VBQ3ZCLHlCQUF5QjtFQUN6QixjQUFjO0VBQ2QsZ0JBQWdCO0FBQ2xCOztBQUVBO0VBQ0UsYUFBYTtFQUNiLGdDQUFnQzs7O0FBR2xDLENBQUE7O0FBRUE7RUFDRSxjQUFjO0VBQ2QsZUFBZTtBQUNqQjs7QUFDQTtFQUNFLFlBQVk7QUFDZCIsImZpbGUiOiJzcmMvYXBwL1NoYXJlZC9tYi1tYXAvbWItbWFwLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJtYXQtY2FyZC1jb250ZW50IHtcclxud2lkdGg6IDQwMHB4O1xyXG4gIGhlaWdodDogMTAwcHg7XHJcbiAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XHJcbiAgLyogd2hpdGUtc3BhY2U6IG5vd3JhcDsgKi9cclxuICBkaXNwbGF5OiBibG9jaztcclxuICBvdmVyZmxvdzogaGlkZGVuO1xyXG59XHJcblxyXG5hZ20tbWFwIHtcclxuICBoZWlnaHQ6IDQ1MHB4O1xyXG4gIHRleHQtc2hhZG93OiAwcHggMHB4IDkuMnB4IHdoaXRlO1xyXG5cclxuXHJcbn07XHJcblxyXG4uYWdtLW1hcC1jb250YWluZXItaW5uZXIge1xyXG4gIHdpZHRoOiBpbmhlcml0O1xyXG4gIGhlaWdodDogaW5oZXJpdDtcclxufVxyXG4uYWdtLW1hcC1jb250ZW50IHtcclxuICBkaXNwbGF5Om5vbmU7XHJcbn1cclxuXHJcblxyXG4iXX0= */\"","import {\r\n    Component,\r\n    OnInit,\r\n    Input,\r\n    OnChanges,\r\n    SimpleChanges,\r\n} from '@angular/core';\r\nimport { MbMapService } from 'src/app/services/mb-map.service';\r\nimport { Marker } from './marker';\r\nimport { RentedHousesService } from 'src/app/services/rented-houses.service';\r\nimport { forkJoin } from 'rxjs';\r\nimport { House } from 'src/app/models/house';\r\nimport { Options, LabelType } from 'ng5-slider';\r\nimport { Geocode } from 'src/app/models/geocode';\r\n@Component({\r\n    selector: 'app-mb-map',\r\n    templateUrl: './mb-map.component.html',\r\n    styleUrls: ['./mb-map.component.css'],\r\n})\r\nexport class MbMapComponent implements OnInit, OnChanges {\r\n    @Input() data: House[];\r\n    latitude = -28.68352;\r\n    longitude = -147.20785;\r\n    mapType = 'satellite';\r\n    minMaxValue = [0, 100];\r\n\r\n    // google maps zoom level\r\n    zoom = 8;\r\n\r\n    // initial center position for the map\r\n    lat = 43.0582;\r\n    lng = -79.2902;\r\n\r\n    markers: Marker[] = [];\r\n    changedMarkers: Marker[] = [];\r\n    options: Options;\r\n    previous: any;\r\n    constructor(public mb: MbMapService, public rh: RentedHousesService) {\r\n        this.options = this.getOptions(2000);\r\n    }\r\n\r\n    ngOnChanges(simp: SimpleChanges) {\r\n        console.log('run it');\r\n        // console.log('local', localStorage.getItem('dataSource'));\r\n        // create observables from address values in geocode api of google.\r\n        if (\r\n            this.data !== undefined &&\r\n            this.data !== null &&\r\n            this.data.length !== 0\r\n        ) {\r\n            const addressObs = this.data.map(x =>\r\n                this.mb.getLatLong(x.address)\r\n            );\r\n            this.minMaxValue = this.getMinMaxPrice(this.markers);\r\n            forkJoin(addressObs).subscribe(res => {\r\n                res.forEach((v, i) => {\r\n                    if (v.status === 'OK' && v.results) {\r\n                        const mar = this.mapResultToMarker(v, i);\r\n                        this.markers.push(mar);\r\n                    }\r\n                });\r\n                this.restMarker();\r\n\r\n                // localStorage.setItem(\r\n                //     'dataSource',\r\n                //     JSON.stringify(this.markers)\r\n                // );\r\n            });\r\n        } else {\r\n            console.log('this.markers', this.markers);\r\n            // if (localStorage.getItem('dataSource') !== null) {\r\n            //     // this.markers = JSON.parse(localStorage.getItem('dataSource'));\r\n            // }\r\n        }\r\n    }\r\n    getLabelOption(price: string) {\r\n        return {\r\n            color: 'black',\r\n            fontFamily: '',\r\n            fontSize: '14px',\r\n            fontWeight: 'bold',\r\n            text: price,\r\n        };\r\n    }\r\n    clickedMap(event) {\r\n        if (this.previous) {\r\n            this.previous.close();\r\n            this.previous = undefined;\r\n        }\r\n    }\r\n\r\n    clickedMarker(label: string, infoWindow, marker, index: number) {\r\n        if (this.previous && this.previous !== infoWindow) {\r\n            this.previous.close();\r\n        }\r\n        this.previous = infoWindow;\r\n    }\r\n\r\n    private mapResultToMarker(v: Geocode, i: number): Marker {\r\n        const mar: Marker = new Marker();\r\n\r\n        mar.lat = v.results[0].geometry.location.lat;\r\n        mar.lng = v.results[0].geometry.location.lng;\r\n        mar.des = this.data[i].discription;\r\n\r\n        mar.title = this.data[i].title;\r\n        mar.imagesUrl = this.data[i].images;\r\n        mar.date = this.data[i].date;\r\n        mar.price = this.data[i].price;\r\n        mar.url = this.data[i].url;\r\n        mar.address = this.data[i].address;\r\n        return mar;\r\n    }\r\n\r\n    /**\r\n     *\r\n     */\r\n    restMarker() {\r\n        this.minMaxValue = this.getMinMaxPrice(this.markers);\r\n        this.options = this.getOptions(this.minMaxValue[1]);\r\n        this.changedMarkers = this.markers;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param markers\r\n     */\r\n    getMinMaxPrice(markers: Marker[]) {\r\n        if (!this.markers || this.markers.length === 0) {\r\n            return this.minMaxValue;\r\n        }\r\n        // convert currency to number and then remove all empty/NaN values\r\n        const priceArray = this.markers\r\n            .map(m => parseFloat(m.price.replace(/[,$]/g, '')))\r\n            .filter(value => !Number.isNaN(value));\r\n\r\n        // find max value\r\n        const max = priceArray.reduce((pr, cur) => {\r\n            return Math.max(pr, cur);\r\n        });\r\n\r\n        // find min value\r\n        const min = priceArray.reduce((pr, cur) => {\r\n            return Math.min(pr, cur);\r\n        });\r\n        return [min, max];\r\n    }\r\n\r\n    /**\r\n     *\r\n     */\r\n    ngOnInit() {\r\n        // convert address to lat and long\r\n        // this.mb.getLatLong(address).subscribe(ln => {\r\n        //   if (ln.status === 'OK') {\r\n        //     console.log('ln', ln);\r\n        //     // ln.results.forEach((v, i) => {\r\n        //     //   const mar: Marker = new Marker();\r\n        //     //   mar.lat = v.geometry.location.lat;\r\n        //     //   mar.lat = v.geometry.location.lng;\r\n        //     //   mar.des = this.data[i].discription;\r\n        //     //   mar.imagesUrl = this.data[i].images;\r\n        //     //   mar.price = this.data[i].price;\r\n        //     //   mar.url = this.data[i].url;\r\n        //     //   mar.address = this.data[i].address;\r\n        //     //   this.markers.push(mar);\r\n        //     // });\r\n        //   }\r\n        // });\r\n    }\r\n    /**\r\n     *\r\n     * @param maxPrice\r\n     */\r\n    getOptions(maxPrice: number): Options {\r\n        return {\r\n            floor: 0,\r\n            ceil: maxPrice,\r\n            translate: (value: number, label: LabelType): string => {\r\n                switch (label) {\r\n                    case LabelType.Low:\r\n                        return '<b>Min price:</b> $' + value;\r\n                    case LabelType.High:\r\n                        return '<b>Max price:</b> $' + value;\r\n                    default:\r\n                        return '$' + value;\r\n                }\r\n            },\r\n        };\r\n    }\r\n\r\n    /**\r\n     *\r\n     */\r\n    onSliderChanged() {\r\n        // convert currency to number and then remove all empty/NaN values\r\n        const priceArray = this.markers.map(m =>\r\n            parseFloat(m.price.replace(/[,$]/g, ''))\r\n        );\r\n\r\n        // get markers from min and max range\r\n        this.changedMarkers = this.markers.filter((v, i) => {\r\n            return (\r\n                priceArray[i] >= this.minMaxValue[0] &&\r\n                priceArray[i] <= this.minMaxValue[1]\r\n            );\r\n        });\r\n    }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL1NoYXJlZC9tYi10YWJsZS9tYi10YWJsZS5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-mb-table',\r\n  templateUrl: './mb-table.component.html',\r\n  styleUrls: ['./mb-table.component.css']\r\n})\r\nexport class MbTableComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MbMapComponent } from './mb-map/mb-map.component';\r\nimport { MbTableComponent } from './mb-table/mb-table.component';\r\nimport { UrlValidatorDirective } from './url-validator.directive';\r\nimport { AgmCoreModule } from '@agm/core';\r\nimport { Ng5SliderModule } from 'ng5-slider';\r\nimport { ServicesModule } from '../services/services.module';\r\nimport { MatCardModule, MatExpansionModule } from '@angular/material';\r\n\r\n@NgModule({\r\n    imports: [\r\n        ServicesModule,\r\n        MatCardModule,\r\n        CommonModule,\r\n        Ng5SliderModule,\r\n        MatExpansionModule,\r\n        AgmCoreModule.forRoot({\r\n            // apiKey: 'AIzaSyAvcDy5ZYc2ujCS6TTtI3RYX5QmuoV8Ffw'\r\n            apiKey: 'AIzaSyC3u1VAIs0S5Ij-HmcxrTEMIx19X8UZH30',\r\n            /* apiKey is required, unless you are a\r\n      premium customer, in which case you can\r\n      use clientId\r\n      */\r\n        }),\r\n    ],\r\n    exports: [UrlValidatorDirective, MbMapComponent],\r\n    declarations: [MbMapComponent, MbTableComponent, UrlValidatorDirective],\r\n    providers: [],\r\n})\r\nexport class SharedModule {}\r\n","import { Directive } from '@angular/core';\r\nimport {\r\n  NG_VALIDATORS,\r\n  AbstractControl,\r\n  ValidatorFn,\r\n  Validator\r\n} from '@angular/forms';\r\n\r\n/** A hero's name can't match the given regular expression */\r\nexport function urlValidator(nameRe: RegExp): ValidatorFn {\r\n  return (control: AbstractControl): { [key: string]: any } | null => {\r\n    const forbidden = nameRe.test(control.value);\r\n    console.log('forbidden', forbidden);\r\n    return forbidden ? null : { isUrlValid: { value: control.value } };\r\n  };\r\n}\r\n\r\n@Directive({\r\n  selector: '[appUrlValidator]',\r\n  providers: [\r\n    { provide: NG_VALIDATORS, useExisting: UrlValidatorDirective, multi: true }\r\n  ]\r\n})\r\nexport class UrlValidatorDirective implements Validator {\r\n  constructor() {}\r\n  validate(control: AbstractControl): { [key: string]: any } | null {\r\n    const reg = 'https://www.kijiji.ca/.*';\r\n    return reg ? urlValidator(new RegExp(reg))(control) : null;\r\n  }\r\n}\r\n","module.exports = \".jumbotron {\\r\\n  padding-top: 20px;\\r\\n  padding-bottom: 10px;\\r\\n}\\r\\n.example-sidenav{\\r\\n\\r\\n  padding-top: 100px;\\r\\n  padding-left: 20px;\\r\\n}\\r\\n.matformfield{\\r\\n\\r\\n  /* width: 100%; */\\r\\n\\r\\n}\\r\\n.price{\\r\\nmargin-right: 10px;\\r\\nmargin-left: 10px;\\r\\n\\r\\n  width: 40%;\\r\\n}\\r\\n.filterInputs{\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n}\\r\\n.filterInputs > * {\\r\\n  width: 100%;\\r\\n\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxpQkFBaUI7RUFDakIsb0JBQW9CO0FBQ3RCO0FBQ0E7O0VBRUUsa0JBQWtCO0VBQ2xCLGtCQUFrQjtBQUNwQjtBQUNBOztFQUVFLGlCQUFpQjs7QUFFbkI7QUFFQTtBQUNBLGtCQUFrQjtBQUNsQixpQkFBaUI7O0VBRWYsVUFBVTtBQUNaO0FBQ0E7RUFDRSxhQUFhO0VBQ2Isc0JBQXNCO0FBQ3hCO0FBQ0E7RUFDRSxXQUFXOztBQUViIiwiZmlsZSI6InNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuanVtYm90cm9uIHtcclxuICBwYWRkaW5nLXRvcDogMjBweDtcclxuICBwYWRkaW5nLWJvdHRvbTogMTBweDtcclxufVxyXG4uZXhhbXBsZS1zaWRlbmF2e1xyXG5cclxuICBwYWRkaW5nLXRvcDogMTAwcHg7XHJcbiAgcGFkZGluZy1sZWZ0OiAyMHB4O1xyXG59XHJcbi5tYXRmb3JtZmllbGR7XHJcblxyXG4gIC8qIHdpZHRoOiAxMDAlOyAqL1xyXG5cclxufVxyXG5cclxuLnByaWNle1xyXG5tYXJnaW4tcmlnaHQ6IDEwcHg7XHJcbm1hcmdpbi1sZWZ0OiAxMHB4O1xyXG5cclxuICB3aWR0aDogNDAlO1xyXG59XHJcbi5maWx0ZXJJbnB1dHN7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG59XHJcbi5maWx0ZXJJbnB1dHMgPiAqIHtcclxuICB3aWR0aDogMTAwJTtcclxuXHJcbn1cclxuIl19 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { KijijiService } from './services/kijiji.service';\r\nimport { Category, CityNamesForOntario } from './models/category';\r\nimport { MatSelectChange } from '@angular/material';\r\n\r\n@Component({\r\n    selector: 'app-root',\r\n    templateUrl: './app.component.html',\r\n    styleUrls: ['./app.component.css'],\r\n})\r\nexport class AppComponent implements OnInit {\r\n    categories: Category;\r\n    startPage = 1;\r\n    selectedcateGoryIdLevel1: number;\r\n    selectedcateGoryIdLevel2: number;\r\n    selectedcateGoryIdLevel3: number;\r\n    selectedCityCode: string;\r\n    lastCategory: string;\r\n    cityNames = new CityNamesForOntario();\r\n\r\n    baseUrl = 'https://www.kijiji.ca/';\r\n    url: string;\r\n    minPrice = '';\r\n    maxPrice = '';\r\n    selectedCateId: any;\r\n    selectedCity: { cityName: string; cityurl: string; citycode: string };\r\n    needPriceFilter: boolean;\r\n    constructor(public ks: KijijiService) {}\r\n    ngOnInit() {\r\n        // this.url = this.baseUrl;\r\n        this.ks.getCategoryLevel1().subscribe(cata => (this.categories = cata));\r\n    }\r\n    citySelected(event: MatSelectChange) {\r\n        console.log(event);\r\n        this.selectedCity = this.cityNames.names.find(\r\n            ci => ci.citycode === event.value\r\n        );\r\n        this.createUrl();\r\n    }\r\n\r\n    createUrl(category?: string) {\r\n        if (this.selectedCity) {\r\n            if (category) {\r\n                this.lastCategory = category;\r\n            }\r\n            if (this.lastCategory) {\r\n                this.needPriceFilter =\r\n                    this.lastCategory.search(/Rent|Sale/g) !== -1;\r\n\r\n                this.setupUrl();\r\n                this.priceChanged();\r\n            }\r\n        }\r\n    }\r\n    private setupUrl() {\r\n        this.url = `${this.baseUrl}b-${this.lastCategory.replace(\r\n            /-|\\s./g,\r\n            ''\r\n        )}/${this.selectedCity.cityurl}/page-${this.startPage}/c${\r\n            this.selectedCateId\r\n        }${this.selectedCity.citycode}`;\r\n    }\r\n\r\n    priceChanged() {\r\n        if (this.minPrice && this.maxPrice && this.needPriceFilter) {\r\n            this.url = this.addFilter(\r\n                `price=${this.minPrice}__${this.maxPrice}`\r\n            );\r\n        }\r\n    }\r\n    addFilter(arg0: string) {\r\n        const va = this.url.includes('?') ? '&' : '?';\r\n        return (this.url = this.url + va + arg0);\r\n    }\r\n    categoryChanged(event: MatSelectChange) {\r\n        if (event.source && event.value) {\r\n            console.log('event', event.source.triggerValue);\r\n            this.selectedCateId = event.value;\r\n            this.createUrl(event.source.triggerValue);\r\n\r\n            this.ks.getCategorySubLevels(event.value).subscribe(cata => {\r\n                this.categories = cata;\r\n                console.log('this.categories', this.categories);\r\n            });\r\n        }\r\n    }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { AppComponent } from './app.component';\r\nimport { FormsModule } from '@angular/forms';\r\n// import { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n// import { MatProgressBarModule, MatButtonModule } from '@angular/material';\r\n// import { UrlValidatorDirective } from './Shared/url-validator.directive';\r\n// import { SharedModule } from './Shared/shared.module';\r\nimport { MbMapService } from './services/mb-map.service';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { ComponentsModule } from './components/components.module';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\n@NgModule({\r\n    declarations: [AppComponent],\r\n    imports: [\r\n        FormsModule,\r\n        BrowserModule,\r\n        ComponentsModule,\r\n        MatInputModule,\r\n        MatSelectModule,\r\n        MatSidenavModule,\r\n        MatFormFieldModule,\r\n        MatDividerModule,\r\n        MatAutocompleteModule\r\n    ],\r\n    providers: [MbMapService],\r\n    bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n// AIzaSyC3u1VAIs0S5Ij-HmcxrTEMIx19X8UZH30\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HomeComponent } from './home/home.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { MatProgressBarModule, MatButtonModule } from '@angular/material';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { SharedModule } from '../Shared/shared.module';\nimport { UrlValidatorDirective } from '../Shared/url-validator.directive';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        BrowserModule,\n        FormsModule,\n        MatProgressBarModule,\n        MatButtonModule,\n        BrowserAnimationsModule,\n        SharedModule,\n    ],\n    exports: [HomeComponent, UrlValidatorDirective],\n    declarations: [HomeComponent],\n})\nexport class ComponentsModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaG9tZS9ob21lLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { House } from 'src/app/models/house';\nimport { RentedHousesService } from 'src/app/services/rented-houses.service';\nimport { Observable } from 'rxjs';\nimport { Page } from 'src/app/models/page';\n@Component({\n    selector: 'app-home',\n    templateUrl: './home.component.html',\n    styleUrls: ['./home.component.css'],\n})\nexport class HomeComponent implements OnInit {\n    title = 'HouseScraping';\n    // url = '';\n    startPage = 1;\n    endPage = 3;\n    isKeep = true;\n    scrapedData = new Array<House>();\n    @Input() url: string;\n    constructor(public rh: RentedHousesService) {}\n\n    ngOnInit() {\n        if (localStorage.getItem('dataSource') !== null) {\n            this.scrapedData = JSON.parse(localStorage.getItem('dataSource'));\n        }\n    }\n    validator() {}\n\n    /**\n     * get all the list of rented house\n     */\n    getRentedHouses() {\n        this.rh.getItemsInfoByPage({\n                url: this.url,\n            })\n            .subscribe(items => {\n                console.log('items', items);\n                if (!this.isKeep) {\n                    localStorage.removeItem('dataSource');\n                }\n                this.scrapedData = new Array<House>();\n                items.forEach(element => {\n                    this.scrapedData.push(element);\n                });\n\n                localStorage.setItem(\n                    'dataSource',\n                    JSON.stringify(this.scrapedData)\n                );\n                this.scrapedData = [...this.scrapedData];\n                console.log('this.scrapedData', this.scrapedData);\n            });\n    }\n\n    /**\n     * On button click\n     */\n    private DeleteHistoryData() {\n        localStorage.removeItem('dataSource');\n    }\n\n    /**\n     * on Button click\n     * @param page\n     */\n    private GetAllTheItems(page: Page): Observable<House[]>[] {\n        console.log('items', page);\n\n        return page.listOfpageUrls.map(pageUrl =>\n            this.rh.getItemsInfoByPage({ url: pageUrl })\n        );\n    }\n}\n","export class Category {\r\n    _links: Links;\r\n    level1: Level1;\r\n    level3: Level3;\r\n    level2: Level2;\r\n}\r\n\r\ninterface Level2 {\r\n    postValue: number;\r\n    items: Item2[];\r\n}\r\n\r\ninterface Level3 {\r\n    postValue?: any;\r\n    items: Item2[];\r\n}\r\n\r\ninterface Item2 {\r\n    categoryId: number;\r\n    onHomepage: boolean;\r\n    subTitle?: any;\r\n    pseudoCategory: boolean;\r\n    leaf: boolean;\r\n    sortOrder: number;\r\n    children: any[];\r\n    newCategory: boolean;\r\n    admarktCategory: boolean;\r\n    name: string;\r\n    url?: any;\r\n}\r\n\r\ninterface Level1 {\r\n    postValue: number;\r\n    items: Item[];\r\n}\r\n\r\ninterface Item {\r\n    categoryId: number;\r\n    onHomepage: boolean;\r\n    subTitle?: string;\r\n    pseudoCategory: boolean;\r\n    leaf: boolean;\r\n    sortOrder: number;\r\n    children: any[];\r\n    newCategory: boolean;\r\n    admarktCategory: boolean;\r\n    name: string;\r\n    url?: any;\r\n}\r\n\r\ninterface Links {\r\n    self: Self;\r\n}\r\n\r\ninterface Self {\r\n    href: string;\r\n}\r\n// https://www.kijiji.ca/j-select-category.json?t=1580450870373\r\nexport class CityNamesForOntario {\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    names = [\r\n{cityName: 'Barrie', cityurl: 'belleville-area', citycode: 'l1700129'},\r\n{cityName: 'Belleville Area ', cityurl: 'belleville-area', citycode: 'l1700129'},\r\n{cityName: 'Brantford',  cityurl: 'brantford', citycode: 'l1700206'},\r\n{cityName: 'Brockville ', cityurl: 'brockville', citycode: 'l1700247'},\r\n{cityName: 'Chatham-Kent ', cityurl: 'chatham-kent', citycode: 'l1700239'},\r\n{cityName: 'Cornwall ', cityurl: 'cornwall-on', citycode: 'l1700133'},\r\n{cityName: 'Guelph ', cityurl: 'guelph', citycode: 'l1700242'},\r\n{cityName: 'Hamilton ', cityurl: 'hamilton', citycode: 'l80014'},\r\n{cityName: 'Kapuskasing', cityurl: 'kapuskasing', citycode: 'l1700237'},\r\n{cityName: 'Kenora ', cityurl: 'kenora', citycode: 'l1700249'},\r\n{cityName: 'Kingston Area', cityurl: 'kingston-area', citycode: 'l1700181'},\r\n{cityName: 'Kitchener Area', cityurl: 'kitchener-area', citycode: 'l1700209'},\r\n{cityName: 'Leamington ', cityurl: 'leamington', citycode: 'l1700240'},\r\n{cityName: 'London ', cityurl: 'london', citycode: 'l1700214'},\r\n{cityName: 'Muskoka', cityurl: 'muskoka', citycode: 'l1700078'},\r\n{cityName: 'Norfolk County', cityurl: 'norfolk-county', citycode: 'l1700248'},\r\n{cityName: 'North Bay', cityurl: 'north-bay', citycode: 'l1700243'},\r\n{cityName: 'Ottawa / Gatineau Area', cityurl: 'ottawa-gatineau-area', citycode: 'l1700184'},\r\n{cityName: 'Owen Sound ', cityurl: 'owen-sound', citycode: 'l1700187'},\r\n{cityName: 'Peterborough Area ', cityurl: 'peterborough-area', citycode: 'l1700217'},\r\n{cityName: 'Renfrew County Area ', cityurl: 'renfrew-county-area', citycode: 'l1700074 '},\r\n{cityName: 'Sarnia Area', cityurl: 'sarnia-area', citycode: 'l1700189'},\r\n{cityName: 'Sault Ste. Marie', cityurl: 'sault-ste-marie', citycode: 'l1700244'},\r\n{cityName: 'St. Catharines', cityurl: 'st-catharines', citycode: 'l80016'},\r\n{cityName: 'Sudbury', cityurl: 'sudbury', citycode: 'l1700245'},\r\n{cityName: 'Thunder Bay', cityurl: 'thunder-bay', citycode: 'l1700126'},\r\n{cityName: 'Timmins', cityurl: 'timmins', citycode: 'l1700238'},\r\n{cityName: 'Toronto', cityurl: 'gta-greater-toronto', citycode: 'l1700272'},\r\n{cityName: 'Windsor Region', cityurl: 'windsor-area-on', citycode: 'l1700220'},\r\n{cityName: 'Woodstock', cityurl: 'woodstock-on', citycode: 'l1700241'},\r\n    ];\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ErrorHandle } from '../Shared/errorHandle';\nimport { Category } from '../models/category';\nimport { catchError } from 'rxjs/internal/operators/catchError';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class KijijiService extends ErrorHandle {\n    constructor(private http: HttpClient) {\n        super();\n    }\n    pyScraping = `http://127.0.0.1:5000/`;\n\n    getCategoryLevel1() {\n        return this.http\n            .get<Category>(`${this.pyScraping}getCategories`)\n            .pipe(catchError(this.handleError));\n    }\n\n    getCategorySubLevels(categoryId: number) {\n        return this.http\n            .post<Category>(`${this.pyScraping}getCategories`, { categoryId })\n            .pipe(catchError(this.handleError));\n    }\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { throwError, Observable } from 'rxjs';\r\nimport { Geocode } from '../models/geocode';\r\nimport { ErrorHandle } from '../Shared/errorHandle';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class MbMapService extends ErrorHandle {\r\n    constructor(private http: HttpClient) {\r\n        super();\r\n    }\r\n\r\n    apiKey = 'AIzaSyC3u1VAIs0S5Ij-HmcxrTEMIx19X8UZH30';\r\n    geocodeUrl = 'https://maps.googleapis.com/maps/api/geocode';\r\n\r\n    getLatLong(address: string, type = 'json') {\r\n        console.log('I am running');\r\n        return this.http\r\n            .get<Geocode>(\r\n                `${this.geocodeUrl}/${type}?address=${address}&key=${this.apiKey}`\r\n            )\r\n            .pipe(catchError(this.handleError));\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { catchError } from 'rxjs/operators';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { throwError, Observable } from 'rxjs';\r\nimport { House } from '../models/house';\r\nimport { Page } from '../models/page';\r\nimport { ErrorHandle } from '../Shared/errorHandle';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class RentedHousesService extends ErrorHandle {\r\n    constructor(private http: HttpClient) {\r\n      super()\r\n    }\r\n\r\n    apiKey = 'AIzaSyC3u1VAIs0S5Ij-HmcxrTEMIx19X8UZH30';\r\n    pyScraping = environment.url;;\r\n    getUrl(api: string) {\r\n        return this.pyScraping + api;\r\n    }\r\n    getHouses(url: any) {\r\n        return this.http\r\n            .post<House[]>(this.pyScraping, url)\r\n            .pipe(catchError(this.handleError));\r\n    }\r\n\r\n    getPageInfo(url: any): Observable<Page> {\r\n        return this.http\r\n            .post<Page>(this.getUrl('getTotalPages'), url)\r\n            .pipe(catchError(this.handleError));\r\n    }\r\n\r\n    getItemsInfoByPage(url: any): Observable<House[]> {\r\n        return this.http\r\n            .post<House[]>(this.getUrl('getItemsInfoByPage'), url)\r\n            .pipe(catchError(this.handleError));\r\n    }\r\n\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MbMapService } from './mb-map.service';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { RentedHousesService } from './rented-houses.service';\r\nimport { ErrorHandle } from '../Shared/errorHandle';\r\n\r\n@NgModule({\r\n    imports: [CommonModule, HttpClientModule],\r\n    exports: [],\r\n    declarations: [],\r\n    providers: [MbMapService, RentedHousesService],\r\n})\r\nexport class ServicesModule extends  ErrorHandle {\r\n    constructor() {\r\n        super();\r\n    }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n    production: false,\r\n    url: 'http://127.0.0.1:5000/',\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import 'hammerjs';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}